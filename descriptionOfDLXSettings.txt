DLX uses the following settings for Apache and Tomcat.

1. To handle the communication between Apache and Tomcat DLX uses mod_jk Web server connector
which we can find at ...${apache-root}\modules\. All configuration settings for this connection is described at ${apache-root}\conf\worker.properties

worker.list=worker1
worker.worker1.type=ajp13
worker.worker1.host=localhost
worker.worker1.port=8009
worker.worker1.lbfactor=50
worker.worker1.connection_pool_size=10
worker.worker1.connection_pool_timeout=600
worker.worker1.socket_keepalive=1

We can have more than one "worker" for several tomcats with different settings (ajp, http).

2. To use mod_jk we should add at httpd.conf apache configuration file located in ${apache-root}\conf directory
LoadModule jk_module modules/mod_jk.so
JkWorkersFile "conf/worker.properties"

LoadModule jk_module modules/mod_jk.so tells apache server to load the mod_jk library and where it is located. JkWorkersFile conf/worker.properties tells mod_jk where worker.properties is located.

Also we should add Web application mapping in httpd.conf apache configuration file located in ${apache-root}\conf directory

# Mapping for CUI application
JkMount  /<webappname>/*.jsp worker1
JkMount  /<webappname>/*.do worker1

3. DLX also uses such directive like "Alias". This derective is used to denote alias for UI Static Site (${apache-root}\conf\httpd.conf)

# Setup CUI application static site (required by Content Provider)
Alias /<webappname> "<pathtowebapp>/<webappname>/StaticContent"
<Directory "<pathtowebapp>/<webappname>/StaticContent">
    Options Indexes MultiViews
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

Directive "Directory" allows to define different options fo particular directory (access (allow from all), applying order for directives  (allow deny)

6. To include Merchadizing in our Web project we also use AliasMatch

AliasMatch ^/TDPMedia_amc_mtb/java/merchandizing/static-site/[0-9\-]*/(.*)$ "<pathtodir>/00006959/src/java/merchandizing/static-site/$1"


7. For Tomcat we define port AJP/1.3 and the following properties for Static Content:

-DPOSOverride.<POS>.StaticContent.AbsoluteStaticContentURL=//<localmachine>.minsk.epam.com/<webappname>
-DPOSOverride.<POS>.StaticContent.AbsoluteDynamicContentURL=//<localmachine>.minsk.epam.com/<webappname>
-DPOSOverride.<POs>.StaticContent.ResourceURL=http://<localmachine>.minsk.epam.com/<webappname>/resources


8. Some customers demand on SSL settings for Apache (JBU for example).
In such situation we should create special certificates (server.pem, server.csr, server.crt) and copy them to 
${apache-root}\conf.

To do this run the following from command line:

"$<apache-root>\bin\openssl.exe" genrsa -des3 -out server.key 1024

openssl rsa -in server.key -out server.pem

openssl req -new -config "c:\TDP\Apache\Apache2.2.22\conf\openssl.cnf" -key server.key -out server.csr

openssl x509 -req -days 3000 -in server.csr -signkey server.key -out server.crt


(when It's necessary enter the following info)

Country Name (2 letter code) [AU]:BY
State or Province Name (full name) [Some-State]:Gomel
Locality Name (eg, city) []:Gomel
Organization Name (eg, company) [Internet Widgits Pty Ltd]:EPAM
Organizational Unit Name (eg, section) []:DEV
Common Name (e.g. server FQDN or YOUR name) []:*.jetblue.com
Email Address []:piotr.kalashuk@datalex.com

keytool -import -v -trustcacerts -alias server.crt -file "$<apache-root>\conf\server.crt" -keystore "<java-root>\jre\lib\security\cacerts"
where cacerts password: changeit

